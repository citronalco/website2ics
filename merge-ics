#!/usr/bin/env python3
#-*- coding: utf-8 -*-

import sys
import requests
import re

import argparse
from icalendar import Calendar, Event
import os
from glob import glob

def main():
  parser = argparse.ArgumentParser()
  parser.add_argument('ics', nargs="+", type=str, help="URL/path to ics file")
  args = parser.parse_args()

  ics = []
  for i in args.ics:
    files = glob(i)
    if files:
      ics.extend(files)
    else:
      ics.append(i)

  if not ics:
    print("No ics files", file=sys.stderr)
    sys.exit(1)


  results_cal = Calendar()

  # Header
  results_cal.add('version', '2.0')
  results_cal.add('method', 'PUBLISH')
  results_cal.add('prodid', 'merge-ics 0.1')
  results_cal.add('x-published-ttl', 'P1D')

  for cal in args.ics:
    try:
      response = requests.get(cal)
      data = response.text
    except requests.exceptions.ConnectionError:
      print("ERROR: Could not connect to %s, skipping" % cal, file=sys.stderr)
      continue
    except requests.exceptions.MissingSchema:
      try:
        cal_file = open(cal, 'rb')
        data = cal_file.read()
      except:
        print("ERROR: Could not open %s, skipping" % cal, file=sys.stderr)
        continue

    try:
      cal = Calendar.from_ical(data)
    except ValueError:
      print("ERROR: Could not parse ics data of %s, skipping" % cal, file=sys.stderr)
      continue

    # VTIMEZONES
    tzids = []
    for vtimezone in cal.walk('vtimezone'):
        if vtimezone['TZID'] not in tzids:
            results_cal.add_component(vtimezone)
            tzids.append(vtimezone['TZID'])

    # EVENTS
    for event in cal.walk('vevent'):
      results_cal.add_component(event)

  print(results_cal.to_ical().decode())

if __name__ == "__main__":
  main()
